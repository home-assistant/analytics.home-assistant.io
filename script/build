#! /bin/bash
# Build the site

declare data
declare integration_details

declare data_path="${PWD}/site/public/data.json"
declare integration_details_path="${PWD}/site/public/integration_details.json"

# Stop on errors
set -e


cd "$(dirname "$0")/.."

mkdir -p ./site/public

if [ -n "$CF_KV_TOKEN" ]; then
  if [ -n "$INCOMING_HOOK_URL" ]; then
    sleep 61 # Wait for KV writes to reach all nodes
  fi

  if [ "$BRANCH" = "main" ]; then
    data=$(curl -sSLf "$CF_KV_URL" \
      -H "Authorization: Bearer $CF_KV_TOKEN" \
      -H "Content-Type:application/json")
    integration_details=$(curl -sSLf https://www.home-assistant.io/integrations.json)
  else
    data=$(curl -sSLf "$CF_KV_URL_DEV" \
      -H "Authorization: Bearer $CF_KV_TOKEN" \
      -H "Content-Type:application/json")
    integration_details=$(curl -sSLf https://rc.home-assistant.io/integrations.json)
  fi

else
  data=$(curl -sSLf https://dev--home-assistant-analytics.netlify.app/data.json)
  integration_details=$(curl -sSLf https://rc.home-assistant.io/integrations.json)
fi

# Export to files
jq -n "$input" --argjson input "$integration_details" > "$integration_details_path"
jq -n "$input" --argjson input "$data" > "$data_path"


if [ ! -d node_modules ]; then
  script/bootstrap
fi

cd ./site
../node_modules/.bin/vite build
