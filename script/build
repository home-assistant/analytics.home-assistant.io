#! /bin/sh
# Build the site

# Stop on errors
set -e

cd "$(dirname "$0")/.."

mkdir -p ./site/public

if [ -n "$CF_KV_TOKEN" ]; then
  if [ -n "$INCOMING_HOOK_URL" ]; then
    sleep 61 # Wait for KV writes to reach all nodes
  fi

  if [ "$BRANCH" == "main" ]; then
    curl -sSLf "$CF_KV_URL" \
      -H "Authorization: Bearer $CF_KV_TOKEN" \
      -H "Content-Type:application/json" | jq . > ./site/public/data.json
    curl -sSLf https://analytics.home-assistant.io/data.json | jq . > ./site/public/data.json
    curl -sSLf https://www.home-assistant.io/integrations.json | jq . > ./site/public/integration_details.json
  else
    curl -sSLf "$CF_KV_STAGING_URL" \
      -H "Authorization: Bearer $CF_KV_TOKEN" \
      -H "Content-Type:application/json" | jq . > ./site/public/data.json
    curl -sSLf https://rc.home-assistant.io/integrations.json | jq . > ./site/public/integration_details.json
  fi

else
  curl -sSLf https://analytics-dev.home-assistant.io/data.json | jq . > ./site/public/data.json
  curl -sSLf https://rc.home-assistant.io/integrations.json | jq . > ./site/public/integration_details.json
fi


if [ ! -d node_modules ]; then
  script/bootstrap
fi

cd ./site
../node_modules/.bin/vite build
